LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;

entity toneGenerator is
port (toneOut : out std_logic; --this pin will give your notes output
clk : in std_logic;
LED : out std_logic_vector(7 downto 0);
switch : in std_logic_vector(7 downto 0));
end entity toneGenerator;


architecture a of toneGenerator is 
begin
process(clk,switch  )
--------------------------------------------------------sa1
variable count_sa1 : integer range 0 to 1E8 := 1;
variable sa1 : std_logic := '1';
begin
if (switch(0)='1') then
if (count_sa1 = 104168) then--240Hz
count_sa1 := 1;
sa1 := not sa1;
else
count_sa1 := count_sa1 + 1;
end if;
toneOut <= sa1;
LED <= (0 => '1', others => '0');
end if;
end process;
end;
--------------------------------------------------------re
architecture b of toneGenerator is 
begin
process(clk,switch  )  
variable count_re : integer range 0 to 1E8 := 1;
variable re : std_logic := '1';
begin
if (switch(1)='1') then
if (count_re = 92593) then--240Hz
count_re := 1;
re := not re;
else
count_re := count_re + 1;
end if;
toneOut <= re;
LED <= (0 => '1', others => '0');
end if;
end process;
end;
--------------------------------------------------------ga
architecture c of toneGenerator is
begin
process(clk,switch  )  
variable count_ga : integer range 0 to 1E8 := 1;
variable ga : std_logic := '1';
begin
if (switch(2)='1') then
if (count_ga = 83333) then--240Hz
count_ga := 1;
ga := not ga;
else
count_ga := count_ga + 1;
end if;
toneOut <= ga;
LED <= (0 => '1', others => '0');
end if;
end process;
end;
--------------------------------------------------------ma
architecture d of toneGenerator is
begin
process(clk,switch  )  
variable count_ma : integer range 0 to 1E8 := 1;
variable ma : std_logic := '1';
begin
if (switch(3)='1') then
if (count_ma = 78125) then--240Hz
count_ma := 1;
ma := not ma;
else
count_ma := count_ma + 1;
end if;
toneOut <= ma;
LED <= (0 => '1', others => '0');
end if;
end process;
end;
--------------------------------------------------------pa
architecture e of toneGenerator is
begin
process(clk,switch  )  
variable count_pa : integer range 0 to 1E8 := 1;
variable pa : std_logic := '1';
begin
if (switch(4)='1') then
if (count_pa = 69444) then--240Hz
count_pa := 1;
pa := not pa;
else
count_pa := count_pa + 1;
end if;
toneOut <= pa;
LED <= (0 => '1', others => '0');
end if;
end process;
end;
--------------------------------------------------------dha
architecture f of toneGenerator is 
begin
process(clk,switch  ) 
variable count_dha : integer range 0 to 1E8 := 1;
variable dha : std_logic := '1';
begin
if (switch(5)='1') then
if (count_dha = 62500) then--240Hz
count_dha := 1;
dha := not dha;
else
count_dha := count_dha + 1;
end if;
toneOut <= dha;
LED <= (0 => '1', others => '0');
end if;
end process;
end;
--------------------------------------------------------ni
architecture g of toneGenerator is
begin
process(clk,switch  )  
variable count_ni : integer range 0 to 1E8 := 1;
variable ni : std_logic := '1';
begin
if (switch(6)='1') then
if (count_ni = 55555) then--240Hz
count_ni := 1;
ni := not ni;
else
count_ni := count_ni + 1;
end if;
toneOut <= ni;
LED <= (0 => '1', others => '0');
end if;
end process;
end;
--------------------------------------------------------sa2
architecture h of toneGenerator is 
begin
process(clk,switch  ) 
variable count_sa2 : integer range 0 to 1E8 := 1;
variable sa2 : std_logic := '1';
begin
if (switch(7)='1') then
if (count_sa2 = 52083) then--240Hz
count_sa2 := 1;
sa2 := not sa2;
else
count_sa2 := count_sa2 + 1;
end if;
toneOut <= sa2;
LED <= (0 => '1', others => '0');
end if;

end process;
end;
